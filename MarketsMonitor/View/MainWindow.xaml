<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:MarketsSystem.ViewModel"
        xmlns:misc="clr-namespace:MarketsSystem.Miscellaneous"
        xmlns:Specialized="clr-namespace:System.Collections.Specialized;assembly=System" x:Class="MarketsSystem.MainWindow"
        mc:Ignorable="d"
    
        Title="Monitor Markets " Height="600" Width="800">
    <Window.Resources>

        <misc:ColorConverter x:Key="ColorConverter"/>

        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            
        </Style>
        <Style TargetType="{x:Type Window}">
                <Style.Triggers>
                <DataTrigger Binding="{Binding User.IsHiden}" Value="True">
                        <Setter Property="Topmost" Value="True"/>
                    </DataTrigger>
                <DataTrigger Binding="{Binding User.IsHiden}" Value="False">
                        <Setter Property="Topmost" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
      
    </Window.Resources>


    <Grid x:Name="ProductsTab"   d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type={x:Type local:MarketViewModel}}">
        
        <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>

        <Grid  Grid.Row="0" Margin="0,0,-0.4,0"  >
               
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="200"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="0.3*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Grid.Column="0"  Orientation="Vertical" HorizontalAlignment="Center">

              

            <DataGrid  Margin="5" Background="White" x:Name="ProductGrid"  ItemsSource="{Binding Context.Products.Local}" SelectedItem="{Binding SelectedProducts, Mode=TwoWay}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Product Name" Binding="{Binding ProductsName}"/>
                        <DataGridTextColumn Header="Average Price" Binding="{Binding AveragePrice}"/>
                    </DataGrid.Columns>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ProductsGridSelectionChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
                <Button Margin="5" Padding="10,0,10,0" Content="Update" Command="{Binding UpdateProductsCommand}"/>
                <Button Margin="5" Padding="10,0,10,0" Content="Delete" Command="{Binding DeleteProductsCommand}"/>
            </StackPanel>
        
                <Border  Grid.Column="1"  BorderThickness="1" Margin="15" CornerRadius="10" BorderBrush="LightBlue">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                           
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  MaxWidth="100" Width="0.3*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="10" Text="Product Name"/>
                    <StackPanel Grid.Row="0" Grid.Column="1" Margin="5" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Left">
                        <TextBox  Margin="5" MinWidth="100" Text="{Binding ProductsInfo.ProductsName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Margin="5" Padding="10,0,10,0" Content="Search" Command="{Binding AddProductsCommand}"/>
                    </StackPanel>
                   
                        <DataGrid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding SelectedProducts.Product}" SelectedItem="{Binding SelectedProduct, Mode=TwoWay}">
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}" >
                                    <Setter Property="Background" Value="Transparent" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MinPrice, Converter={StaticResource ColorConverter}}" Value="true">
                                            <Setter Property="Background" Value="#FF62D362"/>
                                      
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" MaxWidth="200" Binding="{Binding ProductName}"/>
                                <DataGridTextColumn Header="Market" Binding="{Binding Markets.Name}"/>
                                <DataGridTextColumn Header="Price" Binding="{Binding ProductPrice}"/>
                               
                            </DataGrid.Columns>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding ProductGridSelectionChangedCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </DataGrid>
                        <TextBlock Grid.Row="3" Grid.Column="0" Margin="5" Text="Name"/>
                        <TextBlock Grid.Row="4" Grid.Column="0" Margin="5" Text="Shop"/>
                        <TextBlock Grid.Row="5" Grid.Column="0" Margin="5" Text="Price"/>
                        <TextBlock Grid.Row="6" Grid.Column="0" Margin="5" Text="URL"/>

                    <TextBlock Grid.Row="3" Grid.Column="1" Margin="3" Text="{Binding ProductInfo.ProductName, Mode=TwoWay}"/>
                    <TextBlock Grid.Row="4" Grid.Column="1" Margin="3" Text="{Binding ProductInfo.Markets.Name, Mode=TwoWay}"/>
                    <TextBlock  Grid.Row="5" Grid.Column="1" Margin="3" Text="{Binding ProductInfo.ProductPrice, Mode=TwoWay}"/>
                    <TextBlock Grid.Row="6" Grid.Column="1" >
                <Hyperlink Command="{Binding OpenSupportWebsiteCommand}" 
                      CommandParameter="{Binding ProductInfo.ProductHref}">
                 <Label Name="label"  Foreground="Blue" Content="{Binding ProductInfo.ProductHref, Mode=TwoWay}" > 
                     
                 </Label>
                </Hyperlink>
                    </TextBlock>
                    </Grid>
                </Border>
            <Border  Grid.Column="1"  Grid.Row="1"  VerticalAlignment="Top" BorderThickness="1" Margin="15" CornerRadius="10" BorderBrush="LightBlue">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0"  Margin="5" Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock  Margin="5" HorizontalAlignment="Right" Text="e-mail"/>

                        <TextBox  DataContext="{Binding User}"  Text="{Binding EmailToSent,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="186"/>
                        <Button  Margin="5" Grid.Row="9" Padding="10,0,10,0" Width="108" HorizontalAlignment="Center" Content="Sent email" Command="{Binding ExportProductCommand}"/>
                    </StackPanel>
                    <StackPanel  Grid.Row="1" Orientation="Horizontal" Margin="5" HorizontalAlignment="Center">
                        
                        <Button Margin="5" Grid.Row="9"  Padding="10,0,10,0" Width="108" HorizontalAlignment="Left" Content="Sign In" Command="{Binding LoginCommand}"/>

                    </StackPanel>

                </Grid>
            </Border>
            <Border Grid.Column="0"  Grid.Row="1"  VerticalAlignment="Top" BorderThickness="1" Margin="15" CornerRadius="10" BorderBrush="LightBlue">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0"  Margin="5" Orientation="Vertical" HorizontalAlignment="Center">
                        <Button Margin="5" Grid.Row="9" Padding="0,0,0,0" Width="108" HorizontalAlignment="Left" Content="Update price" Command="{Binding UpdatePriceCommand}"/>
                        <TextBlock  Margin="5" HorizontalAlignment="Left"  Text="Last Update:" FontSize="10"/>
                        <TextBlock  Margin="2" HorizontalAlignment="Left" Text="{Binding User.LastUpdate,  Mode=TwoWay,  StringFormat={}{0:MM/dd/yyyy hh:mm tt},  UpdateSourceTrigger=PropertyChanged}" FontSize="10"/>
                       
                    </StackPanel>
                
                </Grid>
            </Border>
        </Grid>


        <DockPanel Grid.Row="1" Width="Auto" VerticalAlignment="Bottom">

            <TextBlock TextWrapping="Wrap"  Width="Auto" DockPanel.Dock="Left" Margin="5" Text="{Binding Notify.ErrorInfo,  Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
           
        <Separator />

            <TextBlock TextWrapping="Wrap" Width="auto"  DockPanel.Dock="Right" HorizontalAlignment="Right"    Margin="5" Text="{Binding User.Email,  Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

        </DockPanel>

        </Grid>
    
</Window>